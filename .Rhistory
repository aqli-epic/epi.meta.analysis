ungroup() %>%
mutate(tot_pop_prop = (tot_pop/sum(tot_pop))*100)
thresh_ll <- 0
thresh_ul <- 20
# aqli color population in ordered pm2.5 buckets
aqli_color_grp_pm2.5_buckets <- aqli_color %>%
mutate(region = ifelse(pm2020 >= thresh_ll & pm2020 <= thresh_ul, str_c(thresh_ll, "-", thresh_ul), pm2020),
region = ifelse(pm2020 > thresh_ul, str_c(">", thresh_ul), region)) %>%
group_by(region) %>%
summarise(tot_pop = sum(population, na.rm = TRUE)) %>%
ungroup() %>%
mutate(order_pollution_group = ifelse(region == str_c(thresh_ll, "-", thresh_ul), 1, 0),
order_pollution_group = ifelse(region == str_c(">", thresh_ul), 2, order_pollution_group)) %>%
ungroup() %>%
mutate(tot_pop_prop = (tot_pop/sum(tot_pop))*100)
# epi total number of studies in ordered pollution buckets (initially filtering out pooled studies, will add back in using a for loop)
epi_num_studies_grp_pm2.5_buckets <- epi %>%
filter(!is.na(mean_pm2.5), mean_pm2.5 != "NA", non_pm2.5 == 0) %>%
group_by(paper_uid) %>%
summarise(mean_pm2.5 = mean(mean_pm2.5, na.rm = TRUE)) %>%
mutate(region = ifelse(mean_pm2.5 >= thresh_ll & mean_pm2.5 <= thresh_ul, str_c(thresh_ll, "-", thresh_ul), mean_pm2.5),
region = ifelse(mean_pm2.5 > 25, str_c(">", thresh_ul), region)) %>%
mutate(order_pollution_group = ifelse(region == str_c(thresh_ll, "-", thresh_ul), 1, 0),
order_pollution_group = ifelse(region == str_c(">", thresh_ul), 2, order_pollution_group)) %>%
group_by(region) %>%
summarise(tot_studies = n(), order_pollution_group = order_pollution_group[1]) %>%
ungroup() %>%
mutate(tot_studies_prop = (tot_studies/sum(tot_studies))*100)
# creating a master dataset for both population and studies data
pop_epi_studies_data <- aqli_color_grp_pm2.5_buckets %>%
left_join(epi_num_studies_grp_pm2.5_buckets, by = c("region", "order_pollution_group")) %>%
select(region,  order_pollution_group, tot_pop_prop, tot_studies_prop) %>%
pivot_longer(cols = tot_pop_prop:tot_studies_prop, names_to = "type_of_prop", values_to = "val")
# plotting the bar graph
pop_num_studies_in_pollution_buckets_graph <- pop_epi_studies_data %>%
ggplot() +
geom_col(mapping = aes(x = fct_reorder(region, order_pollution_group), y = val, fill = type_of_prop), position = position_dodge(), width = 0.4) +
scale_y_continuous(breaks = seq(0, 100, 10)) +
scale_fill_manual(values = c("tot_pop_prop" = "grey", "tot_studies_prop" = "cornflowerblue"), labels = c("Proportion of World Population in Bucket", "Proportion of Studies Completed in Bucket")) +
labs(x = "Mean PM2.5 bucket (in µg/m³)",  y = "Percentage", fill = "",
caption = str_wrap("*This graph 'only' takes into account the PM2.5 specific studies. For multi-country (pooled) studies, it averages the mean PM2.5 values, across all countries."), width = 10) +
theme_hc() +
theme(axis.line.y = element_line(color = "black"),
axis.line.x = element_line(color = "black"),
plot.caption = element_text(size = 8, hjust = 0),
plot.caption.position = "plot")
runApp('experimentation/experimental_vis_temp')
# exp graph 1 v1
exp_graph_1_v1 <- aqli_color %>%
ggplot() +
geom_histogram(mapping = aes(x = pm2020), fill = "darkred", color = "black", alpha = 0.7, size = 0.8) +
geom_vline(xintercept = mean_pm2.5_studies, color = "black", alpha = 0.4, linetype = "longdash", size = 0.4) +
ggthemes::theme_tufte() +
labs(x = expression("Annual Average" ~ PM[2.5] ~ "concentrations in 2020 (in µg/m³)"),
y = "count") +
theme(axis.line = element_line()) +
scale_x_continuous(breaks = seq(0, 120, 20)) +
scale_y_continuous(breaks = seq(0, 12000, 2000))
# exp graph 1 v1
exp_graph_1_v1 <- aqli_color %>%
ggplot() +
geom_histogram(mapping = aes(x = pm2020), fill = "darkred", color = "black", alpha = 0.7, size = 0.8) +
geom_vline(xintercept = mean_pm2.5_studies, color = "black", alpha = 0.4, linetype = "longdash", size = 0.4) +
ggthemes::theme_tufte() +
labs(x = expression("Annual Average" ~ PM[2.5] ~ "concentrations in 2020 (in µg/m³)"),
y = "count") +
theme(axis.line = element_line()) +
scale_x_continuous(breaks = seq(0, 120, 20)) +
scale_y_continuous(breaks = seq(0, 12000, 2000))
#> exp graph 1 - global aqli 2020 data pm2020 column distribution overlayed with vertical lines showing mean_pm2.5 values of various studies.---------------------------------------------------------
mean_pm2.5_studies <- epi$mean_pm2.5[!is.na(epi$mean_pm2.5)]
# exp graph 1 v2
aqli_color %>%
ggplot() +
geom_histogram(mapping = aes(x = pm2020), fill = "darkred", color = "black", alpha = 0.7, size = 0.8) +
geom_vline(xintercept = mean_pm2.5_studies, color = "black", alpha = 0.4, linetype = "longdash", size = 0.4) +
ggthemes::theme_tufte() +
labs(x = expression("Annual Average" ~ PM[2.5] ~ "concentrations in 2020 (in µg/m³)"),
y = "count") +
theme(axis.line = element_line()) +
scale_x_continuous(breaks = seq(0, 120, 20)) +
scale_y_continuous(breaks = seq(0, 12000, 2000)) +
annotate("segment", x = min(mean_pm2.5_studies, na.rm = TRUE), y = 12000, xend = max(mean_pm2.5_studies, na.rm = TRUE), yend = 12000,
arrow = arrow(length = unit(0.3, "cm"), type = "closed")) +
annotate("segment", x = 60, y = 12000, xend = 60, yend = 10000) +
annotate("segment", x = 60, y = 10000, xend = 90, yend = 10000) +
annotate("text", x = 99, y = 10000, label = str_wrap("Mean PM2.5 range of studies", 12))
# exp graph 1 v2
FOO <- aqli_color %>%
ggplot() +
geom_histogram(mapping = aes(x = pm2020), fill = "darkred", color = "black", alpha = 0.7, size = 0.8) +
geom_vline(xintercept = mean_pm2.5_studies, color = "black", alpha = 0.4, linetype = "longdash", size = 0.4) +
ggthemes::theme_tufte() +
labs(x = expression("Annual Average" ~ PM[2.5] ~ "concentrations in 2020 (in µg/m³)"),
y = "count") +
theme(axis.line = element_line()) +
scale_x_continuous(breaks = seq(0, 120, 20)) +
scale_y_continuous(breaks = seq(0, 12000, 2000)) +
annotate("segment", x = min(mean_pm2.5_studies, na.rm = TRUE), y = 12000, xend = max(mean_pm2.5_studies, na.rm = TRUE), yend = 12000,
arrow = arrow(length = unit(0.3, "cm"), type = "closed")) +
annotate("segment", x = 60, y = 12000, xend = 60, yend = 10000) +
annotate("segment", x = 60, y = 10000, xend = 90, yend = 10000) +
annotate("text", x = 99, y = 10000, label = str_wrap("Mean PM2.5 range of studies", 12))
foo
FOO
foo <- aqli_color %>%
ggplot() +
geom_histogram(mapping = aes(x = pm2020), fill = "darkred", color = "black", alpha = 0.7, size = 0.8)+
ggthemes::theme_tufte() +
labs(x = expression("Annual Average" ~ PM[2.5] ~ "concentrations in 2020 (in µg/m³)"),
y = "count") +
theme(axis.line = element_line()) +
scale_x_continuous(breaks = seq(0, 120, 20)) +
scale_y_continuous(breaks = seq(0, 12000, 2000)) +
annotate("rect", xmin = min(mean_pm2.5_studies, na.rm = TRUE), ymin = 0, xmax = max(mean_pm2.5_studies, na.rm = TRUE), ymax = 12000, alpha = 0.2) +
annotate("segment", x = max(mean_pm2.5_studies, na.rm = TRUE), y = 10000, xend = 90, yend = 10000) +
annotate("text", x = 99, y = 10000, label = str_wrap("Mean PM2.5 range of studies", 12))
foo
runApp()
thresh_ll <- 0
thresh_ul <- 15
# aqli color population in ordered pm2.5 buckets
aqli_color_grp_pm2.5_buckets <- aqli_color %>%
mutate(region = ifelse(pm2020 >= thresh_ll & pm2020 <= thresh_ul, str_c(thresh_ll, "-", thresh_ul), pm2020),
region = ifelse(pm2020 > thresh_ul, str_c(">", thresh_ul), region)) %>%
group_by(region) %>%
summarise(tot_pop = sum(population, na.rm = TRUE)) %>%
ungroup() %>%
mutate(order_pollution_group = ifelse(region == str_c(thresh_ll, "-", thresh_ul), 1, 0),
order_pollution_group = ifelse(region == str_c(">", thresh_ul), 2, order_pollution_group)) %>%
ungroup() %>%
mutate(tot_pop_prop = (tot_pop/sum(tot_pop))*100)
# epi total number of studies in ordered pollution buckets (initially filtering out pooled studies, will add back in using a for loop)
epi_num_studies_grp_pm2.5_buckets <- epi %>%
filter(!is.na(mean_pm2.5), mean_pm2.5 != "NA", non_pm2.5 == 0) %>%
group_by(paper_uid) %>%
summarise(mean_pm2.5 = mean(mean_pm2.5, na.rm = TRUE)) %>%
mutate(region = ifelse(mean_pm2.5 >= thresh_ll & mean_pm2.5 <= thresh_ul, str_c(thresh_ll, "-", thresh_ul), mean_pm2.5),
region = ifelse(mean_pm2.5 > 25, str_c(">", thresh_ul), region)) %>%
mutate(order_pollution_group = ifelse(region == str_c(thresh_ll, "-", thresh_ul), 1, 0),
order_pollution_group = ifelse(region == str_c(">", thresh_ul), 2, order_pollution_group)) %>%
group_by(region) %>%
summarise(tot_studies = n(), order_pollution_group = order_pollution_group[1]) %>%
ungroup() %>%
mutate(tot_studies_prop = (tot_studies/sum(tot_studies))*100)
# creating a master dataset for both population and studies data
pop_epi_studies_data <- aqli_color_grp_pm2.5_buckets %>%
left_join(epi_num_studies_grp_pm2.5_buckets, by = c("region", "order_pollution_group")) %>%
select(region,  order_pollution_group, tot_pop_prop, tot_studies_prop) %>%
pivot_longer(cols = tot_pop_prop:tot_studies_prop, names_to = "type_of_prop", values_to = "val")
# plotting the bar graph
pop_num_studies_in_pollution_buckets_graph <- pop_epi_studies_data %>%
ggplot() +
geom_col(mapping = aes(x = fct_reorder(region, order_pollution_group), y = val, fill = type_of_prop), position = position_dodge(), width = 0.4) +
scale_y_continuous(breaks = seq(0, 100, 10)) +
scale_fill_manual(values = c("tot_pop_prop" = "grey", "tot_studies_prop" = "cornflowerblue"), labels = c("Proportion of World Population in Bucket", "Proportion of Studies Completed in Bucket")) +
labs(x = "Mean PM2.5 bucket (in µg/m³)",  y = "Percentage", fill = "",
caption = str_wrap("*This graph 'only' takes into account the PM2.5 specific studies. For multi-country (pooled) studies, it averages the mean PM2.5 values, across all countries."), width = 10) +
theme_hc() +
theme(axis.line.y = element_line(color = "black"),
axis.line.x = element_line(color = "black"),
plot.caption = element_text(size = 8, hjust = 0),
plot.caption.position = "plot")
pop_num_studies_in_pollution_buckets_graph
thresh_ll <- 0
thresh_ul <- 10
# aqli color population in ordered pm2.5 buckets
aqli_color_grp_pm2.5_buckets <- aqli_color %>%
mutate(region = ifelse(pm2020 >= thresh_ll & pm2020 <= thresh_ul, str_c(thresh_ll, "-", thresh_ul), pm2020),
region = ifelse(pm2020 > thresh_ul, str_c(">", thresh_ul), region)) %>%
group_by(region) %>%
summarise(tot_pop = sum(population, na.rm = TRUE)) %>%
ungroup() %>%
mutate(order_pollution_group = ifelse(region == str_c(thresh_ll, "-", thresh_ul), 1, 0),
order_pollution_group = ifelse(region == str_c(">", thresh_ul), 2, order_pollution_group)) %>%
ungroup() %>%
mutate(tot_pop_prop = (tot_pop/sum(tot_pop))*100)
# epi total number of studies in ordered pollution buckets (initially filtering out pooled studies, will add back in using a for loop)
epi_num_studies_grp_pm2.5_buckets <- epi %>%
filter(!is.na(mean_pm2.5), mean_pm2.5 != "NA", non_pm2.5 == 0) %>%
group_by(paper_uid) %>%
summarise(mean_pm2.5 = mean(mean_pm2.5, na.rm = TRUE)) %>%
mutate(region = ifelse(mean_pm2.5 >= thresh_ll & mean_pm2.5 <= thresh_ul, str_c(thresh_ll, "-", thresh_ul), mean_pm2.5),
region = ifelse(mean_pm2.5 > 25, str_c(">", thresh_ul), region)) %>%
mutate(order_pollution_group = ifelse(region == str_c(thresh_ll, "-", thresh_ul), 1, 0),
order_pollution_group = ifelse(region == str_c(">", thresh_ul), 2, order_pollution_group)) %>%
group_by(region) %>%
summarise(tot_studies = n(), order_pollution_group = order_pollution_group[1]) %>%
ungroup() %>%
mutate(tot_studies_prop = (tot_studies/sum(tot_studies))*100)
# creating a master dataset for both population and studies data
pop_epi_studies_data <- aqli_color_grp_pm2.5_buckets %>%
left_join(epi_num_studies_grp_pm2.5_buckets, by = c("region", "order_pollution_group")) %>%
select(region,  order_pollution_group, tot_pop_prop, tot_studies_prop) %>%
pivot_longer(cols = tot_pop_prop:tot_studies_prop, names_to = "type_of_prop", values_to = "val")
# plotting the bar graph
pop_num_studies_in_pollution_buckets_graph <- pop_epi_studies_data %>%
ggplot() +
geom_col(mapping = aes(x = fct_reorder(region, order_pollution_group), y = val, fill = type_of_prop), position = position_dodge(), width = 0.4) +
scale_y_continuous(breaks = seq(0, 100, 10)) +
scale_fill_manual(values = c("tot_pop_prop" = "grey", "tot_studies_prop" = "cornflowerblue"), labels = c("Proportion of World Population in Bucket", "Proportion of Studies Completed in Bucket")) +
labs(x = "Mean PM2.5 bucket (in µg/m³)",  y = "Percentage", fill = "",
caption = str_wrap("*This graph 'only' takes into account the PM2.5 specific studies. For multi-country (pooled) studies, it averages the mean PM2.5 values, across all countries."), width = 10) +
theme_hc() +
theme(axis.line.y = element_line(color = "black"),
axis.line.x = element_line(color = "black"),
plot.caption = element_text(size = 8, hjust = 0),
plot.caption.position = "plot")
pop_num_studies_in_pollution_buckets_graph
thresh_ll <- 0
thresh_ul <- 20
# aqli color population in ordered pm2.5 buckets
aqli_color_grp_pm2.5_buckets <- aqli_color %>%
mutate(region = ifelse(pm2020 >= thresh_ll & pm2020 <= thresh_ul, str_c(thresh_ll, "-", thresh_ul), pm2020),
region = ifelse(pm2020 > thresh_ul, str_c(">", thresh_ul), region)) %>%
group_by(region) %>%
summarise(tot_pop = sum(population, na.rm = TRUE)) %>%
ungroup() %>%
mutate(order_pollution_group = ifelse(region == str_c(thresh_ll, "-", thresh_ul), 1, 0),
order_pollution_group = ifelse(region == str_c(">", thresh_ul), 2, order_pollution_group)) %>%
ungroup() %>%
mutate(tot_pop_prop = (tot_pop/sum(tot_pop))*100)
# epi total number of studies in ordered pollution buckets (initially filtering out pooled studies, will add back in using a for loop)
epi_num_studies_grp_pm2.5_buckets <- epi %>%
filter(!is.na(mean_pm2.5), mean_pm2.5 != "NA", non_pm2.5 == 0) %>%
group_by(paper_uid) %>%
summarise(mean_pm2.5 = mean(mean_pm2.5, na.rm = TRUE)) %>%
mutate(region = ifelse(mean_pm2.5 >= thresh_ll & mean_pm2.5 <= thresh_ul, str_c(thresh_ll, "-", thresh_ul), mean_pm2.5),
region = ifelse(mean_pm2.5 > 25, str_c(">", thresh_ul), region)) %>%
mutate(order_pollution_group = ifelse(region == str_c(thresh_ll, "-", thresh_ul), 1, 0),
order_pollution_group = ifelse(region == str_c(">", thresh_ul), 2, order_pollution_group)) %>%
group_by(region) %>%
summarise(tot_studies = n(), order_pollution_group = order_pollution_group[1]) %>%
ungroup() %>%
mutate(tot_studies_prop = (tot_studies/sum(tot_studies))*100)
# creating a master dataset for both population and studies data
pop_epi_studies_data <- aqli_color_grp_pm2.5_buckets %>%
left_join(epi_num_studies_grp_pm2.5_buckets, by = c("region", "order_pollution_group")) %>%
select(region,  order_pollution_group, tot_pop_prop, tot_studies_prop) %>%
pivot_longer(cols = tot_pop_prop:tot_studies_prop, names_to = "type_of_prop", values_to = "val")
# plotting the bar graph
pop_num_studies_in_pollution_buckets_graph <- pop_epi_studies_data %>%
ggplot() +
geom_col(mapping = aes(x = fct_reorder(region, order_pollution_group), y = val, fill = type_of_prop), position = position_dodge(), width = 0.4) +
scale_y_continuous(breaks = seq(0, 100, 10)) +
scale_fill_manual(values = c("tot_pop_prop" = "grey", "tot_studies_prop" = "cornflowerblue"), labels = c("Proportion of World Population in Bucket", "Proportion of Studies Completed in Bucket")) +
labs(x = "Mean PM2.5 bucket (in µg/m³)",  y = "Percentage", fill = "",
caption = str_wrap("*This graph 'only' takes into account the PM2.5 specific studies. For multi-country (pooled) studies, it averages the mean PM2.5 values, across all countries."), width = 10) +
theme_hc() +
theme(axis.line.y = element_line(color = "black"),
axis.line.x = element_line(color = "black"),
plot.caption = element_text(size = 8, hjust = 0),
plot.caption.position = "plot")
pop_num_studies_in_pollution_buckets_graph
thresh_ll <- 0
thresh_ul <- 25
# aqli color population in ordered pm2.5 buckets
aqli_color_grp_pm2.5_buckets <- aqli_color %>%
mutate(region = ifelse(pm2020 >= thresh_ll & pm2020 <= thresh_ul, str_c(thresh_ll, "-", thresh_ul), pm2020),
region = ifelse(pm2020 > thresh_ul, str_c(">", thresh_ul), region)) %>%
group_by(region) %>%
summarise(tot_pop = sum(population, na.rm = TRUE)) %>%
ungroup() %>%
mutate(order_pollution_group = ifelse(region == str_c(thresh_ll, "-", thresh_ul), 1, 0),
order_pollution_group = ifelse(region == str_c(">", thresh_ul), 2, order_pollution_group)) %>%
ungroup() %>%
mutate(tot_pop_prop = (tot_pop/sum(tot_pop))*100)
# epi total number of studies in ordered pollution buckets (initially filtering out pooled studies, will add back in using a for loop)
epi_num_studies_grp_pm2.5_buckets <- epi %>%
filter(!is.na(mean_pm2.5), mean_pm2.5 != "NA", non_pm2.5 == 0) %>%
group_by(paper_uid) %>%
summarise(mean_pm2.5 = mean(mean_pm2.5, na.rm = TRUE)) %>%
mutate(region = ifelse(mean_pm2.5 >= thresh_ll & mean_pm2.5 <= thresh_ul, str_c(thresh_ll, "-", thresh_ul), mean_pm2.5),
region = ifelse(mean_pm2.5 > 25, str_c(">", thresh_ul), region)) %>%
mutate(order_pollution_group = ifelse(region == str_c(thresh_ll, "-", thresh_ul), 1, 0),
order_pollution_group = ifelse(region == str_c(">", thresh_ul), 2, order_pollution_group)) %>%
group_by(region) %>%
summarise(tot_studies = n(), order_pollution_group = order_pollution_group[1]) %>%
ungroup() %>%
mutate(tot_studies_prop = (tot_studies/sum(tot_studies))*100)
# creating a master dataset for both population and studies data
pop_epi_studies_data <- aqli_color_grp_pm2.5_buckets %>%
left_join(epi_num_studies_grp_pm2.5_buckets, by = c("region", "order_pollution_group")) %>%
select(region,  order_pollution_group, tot_pop_prop, tot_studies_prop) %>%
pivot_longer(cols = tot_pop_prop:tot_studies_prop, names_to = "type_of_prop", values_to = "val")
# plotting the bar graph
pop_num_studies_in_pollution_buckets_graph <- pop_epi_studies_data %>%
ggplot() +
geom_col(mapping = aes(x = fct_reorder(region, order_pollution_group), y = val, fill = type_of_prop), position = position_dodge(), width = 0.4) +
scale_y_continuous(breaks = seq(0, 100, 10)) +
scale_fill_manual(values = c("tot_pop_prop" = "grey", "tot_studies_prop" = "cornflowerblue"), labels = c("Proportion of World Population in Bucket", "Proportion of Studies Completed in Bucket")) +
labs(x = "Mean PM2.5 bucket (in µg/m³)",  y = "Percentage", fill = "",
caption = str_wrap("*This graph 'only' takes into account the PM2.5 specific studies. For multi-country (pooled) studies, it averages the mean PM2.5 values, across all countries."), width = 10) +
theme_hc() +
theme(axis.line.y = element_line(color = "black"),
axis.line.x = element_line(color = "black"),
plot.caption = element_text(size = 8, hjust = 0),
plot.caption.position = "plot")
pop_num_studies_in_pollution_buckets_graph
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
((0.001)^2)/((0.00833333)^2)
100*0.01440001
# generate summary dataset for total number of studies conducted in a given country: (makes sense to count each country in a pooled dataset)
epi_country_count <- epi %>%
select(country) %>%
count(country) %>%
filter(country != "NA", !is.na(country), n != "NA", !is.na(n))
# making country names match before joining epi file with color file
epi_country_count$country <- str_replace(epi_country_count$country, "USA", "United States")
# get data ready for the choropleth map
world <- ne_countries(scale = "medium", returnclass = "sf")
# get data ready for the choropleth map
world <- ne_countries(scale = "medium", returnclass = "sf")
# making country names match before joining epi file with color file
world$name_long <- str_replace(world$name_long, "Russian Federation", "Russia")
world$name_long <- str_replace(world$name_long, "Lao PDR", "Laos")
world$name_long <- str_replace(world$name_long, "Dem. Rep. Korea", "North Korea")
world$name_long <- str_replace(world$name_long, "Republic of Korea", "South Korea")
world$name_long <- str_replace(world$name_long, "Vatican", "Vatican City")
world$name_long <- str_replace(world$name_long, "Somaliland", "Somalia")
# joining world shape file with the epi country wise count dataset
world_shp_epi <- world %>%
left_join(epi_country_count, by = c("name_long" = "country")) %>%
select(name_long, n, geometry) %>%
rename(num_studies = n, country = name_long)
# color 2020 collapse to country level to get the PM2.5 pollution layer (first layer of the map)
aqli_color_country <- aqli_color %>%
group_by(country) %>%
mutate(pop_weights = population/sum(population, na.rm = TRUE),
pm2020_pop_weighted = pm2020*pop_weights) %>%
summarise(avg_pm2.5_2020 = sum(pm2020_pop_weighted, na.rm = TRUE))
# joining the world shape + epi joined file with the aqli color file
world_shp_epi_color <- world_shp_epi %>%
left_join(aqli_color_country, by = "country") %>%
filter(country != "Antarctica") %>%
select(country, num_studies, avg_pm2.5_2020, geometry)
# In the total number of studies column, replacing NAs with 0s
world_shp_epi_color <- world_shp_epi_color %>%
mutate(num_studies = ifelse(is.na(num_studies) == TRUE, 0, num_studies))
# getting centroids for countries after correcting for problematic polygons
world_shp_epi_color_for_centroids <- st_make_valid(world_shp_epi_color)
country_wise_centroids <- st_centroid(world_shp_epi_color_for_centroids, of_largest_polygon = TRUE)
world_shp_epi_color
# color 2020 collapse to country level to get the PM2.5 pollution layer (first layer of the map)
aqli_color_country <- aqli_color %>%
group_by(country) %>%
mutate(pop_weights = population/sum(population, na.rm = TRUE),
pm2020_pop_weighted = pm2020*pop_weights) %>%
summarise(avg_pm2.5_2020 = sum(pm2020_pop_weighted, na.rm = TRUE),
total_pop = sum(population, na.rm = TRUE))
# joining the world shape + epi joined file with the aqli color file
world_shp_epi_color <- world_shp_epi %>%
left_join(aqli_color_country, by = "country") %>%
filter(country != "Antarctica") %>%
select(country, num_studies, avg_pm2.5_2020, geometry)
world_shp_epi_color
aqli_color_country
# generate summary dataset for total number of studies conducted in a given country: (makes sense to count each country in a pooled dataset)
epi_country_count <- epi %>%
select(country) %>%
count(country) %>%
filter(country != "NA", !is.na(country), n != "NA", !is.na(n))
# making country names match before joining epi file with color file
epi_country_count$country <- str_replace(epi_country_count$country, "USA", "United States")
# get data ready for the choropleth map
world <- ne_countries(scale = "medium", returnclass = "sf")
# making country names match before joining epi file with color file
world$name_long <- str_replace(world$name_long, "Russian Federation", "Russia")
world$name_long <- str_replace(world$name_long, "Lao PDR", "Laos")
world$name_long <- str_replace(world$name_long, "Dem. Rep. Korea", "North Korea")
world$name_long <- str_replace(world$name_long, "Republic of Korea", "South Korea")
world$name_long <- str_replace(world$name_long, "Vatican", "Vatican City")
world$name_long <- str_replace(world$name_long, "Brunei Darussalam", "Brunei")
world$name_long <- str_replace(world$name_long, "Somaliland", "Somalia")
# joining world shape file with the epi country wise count dataset
world_shp_epi <- world %>%
left_join(epi_country_count, by = c("name_long" = "country")) %>%
select(name_long, n, geometry) %>%
rename(num_studies = n, country = name_long)
world_shp_epi
# color 2020 collapse to country level to get the PM2.5 pollution layer (first layer of the map)
aqli_color_country <- aqli_color %>%
group_by(country) %>%
mutate(pop_weights = population/sum(population, na.rm = TRUE),
pm2020_pop_weighted = pm2020*pop_weights) %>%
summarise(avg_pm2.5_2020 = sum(pm2020_pop_weighted, na.rm = TRUE),
total_pop = sum(population, na.rm = TRUE))
# joining the world shape + epi joined file with the aqli color file
world_shp_epi_color <- world_shp_epi %>%
left_join(aqli_color_country, by = "country") %>%
filter(country != "Antarctica") %>%
select(country, num_studies, avg_pm2.5_2020, geometry)
# In the total number of studies column, replacing NAs with 0s
world_shp_epi_color <- world_shp_epi_color %>%
mutate(num_studies = ifelse(is.na(num_studies) == TRUE, 0, num_studies))
world_shp_epi_color
# joining the world shape + epi joined file with the aqli color file
world_shp_epi_color <- world_shp_epi %>%
left_join(aqli_color_country, by = "country") %>%
filter(country != "Antarctica") %>%
select(country, num_studies, avg_pm2.5_2020, population, geometry)
# joining the world shape + epi joined file with the aqli color file
world_shp_epi_color <- world_shp_epi %>%
left_join(aqli_color_country, by = "country") %>%
filter(country != "Antarctica") %>%
select(country, num_studies, avg_pm2.5_2020, tot_pop, geometry)
# joining the world shape + epi joined file with the aqli color file
world_shp_epi_color <- world_shp_epi %>%
left_join(aqli_color_country, by = "country") %>%
filter(country != "Antarctica") %>%
select(country, num_studies, avg_pm2.5_2020, total_pop, geometry)
world_shp_epi_color
world_shp_epi_color %>% ggplot() + geom_sf(mapping = aes(size = total_pop))
foo <- world_shp_epi_color %>% mutate(prop_pol = total_pop/sum(total_pop, na.rm = TRUE))
foo
foo <- foo %>% select(-geometry, geometry) %>% st_as_sf()
foo %>% ggplot() + geom_sf(mapping = aes(size = total_pop))
foo %>% ggplot() + geom_sf(mapping = aes(fill = prop_pol))
foo %>% ggplot() + geom_sf(mapping = aes(fill = prop_pol, size = prop_pol))
foo <- foo %>%
foo <- foo %>%  mutate(distortion_factor = ggdist::area_to_distortions(prop_pol))
install.packages("ggdist")
install.packages("ggdist")
library(ggdist)
devtools::install_github("mjskay/ggdist")
install.packages("vctrs")
install.packages("vctrs")
devtools::install_github("mjskay/ggdist")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
library(vctrs)
library(ggdist)
install.packages("ggdist", dependencies = TRUE)
library(ggdist)
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
shiny::runApp()
runApp()
epi
epi$country
#> read in datasets
# epi studies analysis raw sheet
epi <- readxl::read_xlsx("./data-raw/pm2.5_distribution/AQLI_Epidemiology Literature Research.xlsx", sheet = "AnalysisDatasetPM2.5MortalityAn")
#> change default columns types
epi$cohort_size <- as.numeric(epi$cohort_size)
epi$study_start_year<- as.numeric(epi$study_start_year)
epi$study_end_year <- as.numeric(epi$study_end_year)
epi$pm2.5_exposure_ll <- as.numeric(epi$pm2.5_exposure_ll)
epi$pm2.5_exposure_ul <- as.numeric(epi$pm2.5_exposure_ul)
epi$mean_pm2.5 <- as.numeric(epi$mean_pm2.5)
epi$sd_pm2.5 <- as.numeric(epi$sd_pm2.5)
epi$cohort_age_ll <- as.numeric(epi$cohort_age_ll)
epi$cohort_age_ul <- as.numeric(epi$cohort_age_ul)
# AQLI color file
aqli_color <- read_csv("./data-raw/pm2.5_distribution/color.csv")
rm
rm(list = ls())
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
# load libraries
library(readr)
library(dplyr)
library(stringr)
library(magrittr)
library(ggplot2)
library(readr)
library(tidytext)
library(tidyr)
library(tidyverse)
library(ggthemes)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(mapsf)
library(colorspace)
library(shiny)
library(shinydashboard)
#> read in datasets
# epi studies analysis raw sheet
epi <- readxl::read_xlsx("./data-raw/pm2.5_distribution/AQLI_Epidemiology Literature Research.xlsx", sheet = "AnalysisDatasetPM2.5MortalityAn")
#> change default columns types
epi$cohort_size <- as.numeric(epi$cohort_size)
epi$study_start_year<- as.numeric(epi$study_start_year)
epi$study_end_year <- as.numeric(epi$study_end_year)
epi$pm2.5_exposure_ll <- as.numeric(epi$pm2.5_exposure_ll)
epi$pm2.5_exposure_ul <- as.numeric(epi$pm2.5_exposure_ul)
epi$mean_pm2.5 <- as.numeric(epi$mean_pm2.5)
epi$sd_pm2.5 <- as.numeric(epi$sd_pm2.5)
epi$cohort_age_ll <- as.numeric(epi$cohort_age_ll)
epi$cohort_age_ul <- as.numeric(epi$cohort_age_ul)
# AQLI color file
aqli_color <- read_csv("./data-raw/pm2.5_distribution/color.csv")
# AQLI color file
aqli_color <- read_csv("./data-raw/pm2.5_distribution/color.csv")
# AQLI color file
aqli_color <- read_csv("./data-raw/pm2.5_distribution/color.csv")
# getting a country continent file
country_continent <- read_csv("./data-raw/pm2.5_distribution/country_continent.csv")
aqli.color <- read_csv("C:/Users/Aarsh/Desktop/aqli-epic/epi.meta.analysis/data-raw/pm2.5_distribution/color.csv")
