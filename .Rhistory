ggplot2::scale_fill_manual(values = c("tot_pop_prop" = "grey", "tot_studies_prop" = "cornflowerblue"), labels = c("Proportion of World Population in Bucket", "Proportion of Studies Completed in Bucket")) +
ggplot2::labs(x = expression("Mean" ~ PM[2.5] ~ "bucket (in µg/m³)"),  y = "Percentage", fill = "",
title = expression("Percentage of Global population in different" ~ PM[2.5] ~ "buckets"),
caption = stringr::str_wrap("*This graph 'only' takes into account the PM2.5 specific studies. For multi-country (pooled) studies, it averages the mean PM2.5 values, across all countries."), width = 10) +
# ggplot2::geom_text(mapping = aes(x = forcats::fct_reorder(region, order_pollution_group), y = val, label = paste0(round(val, 1), "%")), position = ggplot2::position_dodge2(width = 1, preserve = "single"), vjust = -0.5, hjust = -0.2, size = 3) +
ggthemes::theme_hc() +
ggplot2::theme(axis.line.y = element_line(color = "black"),
axis.line.x = element_line(color = "black"),
plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 0.7, unit = "cm")),
plot.title = element_text(size = 14, margin = margin(b = 1, unit = "cm"), hjust = 0.5),
plot.caption.position = "plot",
axis.title.y = element_text(margin = margin(r = 0.5, unit = "cm"), size = 12),
axis.title.x = element_text(margin = margin(t = 0.5, b = 0.5, unit = "cm"), size  = 12),
axis.text = element_text(size = 10),
legend.box.background = element_rect(color = "black"),
legend.position = "bottom") +
viridis::scale_fill_viridis(discrete = TRUE)
pop_pol_graph_2_buckets <- function(aqli_color, epi, thresh_ll, thresh_ul, pm2.5_col_name){
if(thresh_ll > thresh_ul){
stop("Lower Limit should be less than or equal to the Upper limit! Please try again!")
}
# aqli color population in ordered pm2.5 buckets
aqli_color_grp_pm2.5_buckets <- aqli_color %>%
dplyr::filter(!is.na(!!as.symbol(pm2.5_col_name))) %>%
dplyr::mutate(region = ifelse((!!as.symbol(pm2.5_col_name) >= thresh_ll) & (!!as.symbol(pm2.5_col_name) <= thresh_ul), stringr::str_c(thresh_ll, "-", thresh_ul), !!as.symbol(pm2.5_col_name)),
region = ifelse(!!as.symbol(pm2.5_col_name) > thresh_ul, stringr::str_c(">", thresh_ul), region),
region = ifelse(!!as.symbol(pm2.5_col_name) < thresh_ll, stringr::str_c("<", thresh_ll), region)) %>%
dplyr::group_by(region) %>%
dplyr::summarise(tot_pop = sum(population, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(order_pollution_group = ifelse(region == stringr::str_c("<", thresh_ll), 1, 0),
order_pollution_group = ifelse(region == stringr::str_c(thresh_ll, "-", thresh_ul), 2, order_pollution_group),
order_pollution_group = ifelse(region == stringr::str_c(">", thresh_ul), 3, order_pollution_group)) %>%
dplyr::ungroup() %>%
dplyr::mutate(tot_pop_prop = (tot_pop/sum(tot_pop))*100)
# epi total number of studies in ordered pollution buckets (initially filtering out pooled studies, will add back in using a for loop)
epi_num_studies_grp_pm2.5_buckets <- epi %>%
dplyr::filter(!is.na(mean_pm2.5), mean_pm2.5 != "NA", non_pm2.5 == 0) %>%
dplyr::group_by(paper_uid) %>%
dplyr::summarise(mean_pm2.5 = mean(mean_pm2.5, na.rm = TRUE)) %>%
dplyr::mutate(region = ifelse(mean_pm2.5 >= thresh_ll & mean_pm2.5 <= thresh_ul, stringr::str_c(thresh_ll, "-", thresh_ul), mean_pm2.5),
region = ifelse(mean_pm2.5 > thresh_ul, stringr::str_c(">", thresh_ul), region),
region = ifelse(mean_pm2.5 < thresh_ll, stringr::str_c("<", thresh_ll), region)) %>%
dplyr::mutate(order_pollution_group = ifelse(region == stringr::str_c("<", thresh_ll), 1, 0),
order_pollution_group = ifelse(region == stringr::str_c(thresh_ll, "-", thresh_ul), 2, order_pollution_group),
order_pollution_group = ifelse(region == stringr::str_c(">", thresh_ul), 3, order_pollution_group)) %>%
dplyr::group_by(region) %>%
dplyr::summarise(tot_studies = dplyr::n(), order_pollution_group = order_pollution_group[1]) %>%
dplyr::ungroup() %>%
dplyr::mutate(tot_studies_prop = (tot_studies/sum(tot_studies))*100)
#> bar chart version
# creating a master dataset for both population and studies data
pop_epi_studies_data <- aqli_color_grp_pm2.5_buckets %>%
dplyr::left_join(epi_num_studies_grp_pm2.5_buckets, by = c("region", "order_pollution_group")) %>%
dplyr::select(region,  order_pollution_group, tot_pop_prop, tot_studies_prop) %>%
tidyr::pivot_longer(cols = tot_pop_prop:tot_studies_prop, names_to = "type_of_prop", values_to = "val") %>%
dplyr::mutate(type_of_prop = ifelse(type_of_prop == "tot_pop_prop", "Percent Population in PM₂.₅ bucket", "Percent Studies in PM₂.₅ bucket"))
pop_num_studies_in_pollution_buckets_graph <- pop_epi_studies_data %>%
ggplot2::ggplot() +
ggplot2::geom_col(mapping = aes(x = forcats::fct_reorder(region, order_pollution_group), y = val, fill = type_of_prop), position = position_dodge(), width = 0.3) +
ggplot2::scale_y_continuous(breaks = seq(0, 100, 10), limits = c(0, 100)) +
ggplot2::scale_fill_manual(values = c("tot_pop_prop" = "grey", "tot_studies_prop" = "cornflowerblue"), labels = c("Proportion of World Population in Bucket", "Proportion of Studies Completed in Bucket")) +
ggplot2::labs(x = expression("Mean" ~ PM[2.5] ~ "bucket (in µg/m³)"),  y = "Percentage", fill = "",
title = expression("Percentage of Global population in different" ~ PM[2.5] ~ "buckets"),
caption = stringr::str_wrap("*This graph 'only' takes into account the PM2.5 specific studies. For multi-country (pooled) studies, it averages the mean PM2.5 values, across all countries."), width = 10) +
# ggplot2::geom_text(mapping = aes(x = forcats::fct_reorder(region, order_pollution_group), y = val, label = paste0(round(val, 1), "%")), position = ggplot2::position_dodge2(width = 1, preserve = "single"), vjust = -0.5, hjust = -0.2, size = 3) +
ggthemes::theme_hc() +
ggplot2::theme(axis.line.y = element_line(color = "black"),
axis.line.x = element_line(color = "black"),
plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 0.7, unit = "cm")),
plot.title = element_text(size = 14, margin = margin(b = 1, unit = "cm"), hjust = 0.5),
plot.caption.position = "plot",
axis.title.y = element_text(margin = margin(r = 0.5, unit = "cm"), size = 12),
axis.title.x = element_text(margin = margin(t = 0.5, b = 0.5, unit = "cm"), size  = 12),
axis.text = element_text(size = 10),
legend.box.background = element_rect(color = "black"),
legend.position = "bottom") +
viridis::scale_fill_viridis(discrete = TRUE)
return(pop_num_studies_in_pollution_buckets_graph)
}
pop_pol_graph_2_buckets(aqli_color, epi, 0, 15, "pm2021")
pop_num_studies_in_pollution_buckets_graph <- pop_epi_studies_data %>%
ggplot2::ggplot() +
ggplot2::geom_col(mapping = aes(x = forcats::fct_reorder(region, order_pollution_group), y = val, fill = type_of_prop), position = position_dodge(), width = 0.3) +
ggplot2::scale_y_continuous(breaks = seq(0, 100, 10), limits = c(0, 100)) +
ggplot2::scale_fill_manual(values = c("tot_pop_prop" = "grey", "tot_studies_prop" = "cornflowerblue"), labels = c("Proportion of World Population in Bucket", "Proportion of Studies Completed in Bucket")) +
ggplot2::labs(x = expression("Mean" ~ PM[2.5] ~ "bucket (in µg/m³)"),  y = "Percentage", fill = "",
title = expression("Percentage of Global population in different" ~ PM[2.5] ~ "buckets"),
caption = stringr::str_wrap("*This graph 'only' takes into account the PM2.5 specific studies. For multi-country (pooled) studies, it averages the mean PM2.5 values, across all countries."), width = 10) +
# ggplot2::geom_text(mapping = aes(x = forcats::fct_reorder(region, order_pollution_group), y = val, label = paste0(round(val, 1), "%")), position = ggplot2::position_dodge2(width = 1, preserve = "single"), vjust = -0.5, hjust = -0.2, size = 3) +
ggthemes::theme_fivethirtyeight() +
ggplot2::theme(axis.line.y = element_line(color = "black"),
axis.line.x = element_line(color = "black"),
plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 0.7, unit = "cm")),
plot.title = element_text(size = 14, margin = margin(b = 1, unit = "cm"), hjust = 0.5),
plot.caption.position = "plot",
axis.title.y = element_text(margin = margin(r = 0.5, unit = "cm"), size = 12),
axis.title.x = element_text(margin = margin(t = 0.5, b = 0.5, unit = "cm"), size  = 12),
axis.text = element_text(size = 10),
legend.box.background = element_rect(color = "black"),
legend.position = "bottom") +
viridis::scale_fill_viridis(discrete = TRUE)
pop_pol_graph_2_buckets <- function(aqli_color, epi, thresh_ll, thresh_ul, pm2.5_col_name){
if(thresh_ll > thresh_ul){
stop("Lower Limit should be less than or equal to the Upper limit! Please try again!")
}
# aqli color population in ordered pm2.5 buckets
aqli_color_grp_pm2.5_buckets <- aqli_color %>%
dplyr::filter(!is.na(!!as.symbol(pm2.5_col_name))) %>%
dplyr::mutate(region = ifelse((!!as.symbol(pm2.5_col_name) >= thresh_ll) & (!!as.symbol(pm2.5_col_name) <= thresh_ul), stringr::str_c(thresh_ll, "-", thresh_ul), !!as.symbol(pm2.5_col_name)),
region = ifelse(!!as.symbol(pm2.5_col_name) > thresh_ul, stringr::str_c(">", thresh_ul), region),
region = ifelse(!!as.symbol(pm2.5_col_name) < thresh_ll, stringr::str_c("<", thresh_ll), region)) %>%
dplyr::group_by(region) %>%
dplyr::summarise(tot_pop = sum(population, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(order_pollution_group = ifelse(region == stringr::str_c("<", thresh_ll), 1, 0),
order_pollution_group = ifelse(region == stringr::str_c(thresh_ll, "-", thresh_ul), 2, order_pollution_group),
order_pollution_group = ifelse(region == stringr::str_c(">", thresh_ul), 3, order_pollution_group)) %>%
dplyr::ungroup() %>%
dplyr::mutate(tot_pop_prop = (tot_pop/sum(tot_pop))*100)
# epi total number of studies in ordered pollution buckets (initially filtering out pooled studies, will add back in using a for loop)
epi_num_studies_grp_pm2.5_buckets <- epi %>%
dplyr::filter(!is.na(mean_pm2.5), mean_pm2.5 != "NA", non_pm2.5 == 0) %>%
dplyr::group_by(paper_uid) %>%
dplyr::summarise(mean_pm2.5 = mean(mean_pm2.5, na.rm = TRUE)) %>%
dplyr::mutate(region = ifelse(mean_pm2.5 >= thresh_ll & mean_pm2.5 <= thresh_ul, stringr::str_c(thresh_ll, "-", thresh_ul), mean_pm2.5),
region = ifelse(mean_pm2.5 > thresh_ul, stringr::str_c(">", thresh_ul), region),
region = ifelse(mean_pm2.5 < thresh_ll, stringr::str_c("<", thresh_ll), region)) %>%
dplyr::mutate(order_pollution_group = ifelse(region == stringr::str_c("<", thresh_ll), 1, 0),
order_pollution_group = ifelse(region == stringr::str_c(thresh_ll, "-", thresh_ul), 2, order_pollution_group),
order_pollution_group = ifelse(region == stringr::str_c(">", thresh_ul), 3, order_pollution_group)) %>%
dplyr::group_by(region) %>%
dplyr::summarise(tot_studies = dplyr::n(), order_pollution_group = order_pollution_group[1]) %>%
dplyr::ungroup() %>%
dplyr::mutate(tot_studies_prop = (tot_studies/sum(tot_studies))*100)
#> bar chart version
# creating a master dataset for both population and studies data
pop_epi_studies_data <- aqli_color_grp_pm2.5_buckets %>%
dplyr::left_join(epi_num_studies_grp_pm2.5_buckets, by = c("region", "order_pollution_group")) %>%
dplyr::select(region,  order_pollution_group, tot_pop_prop, tot_studies_prop) %>%
tidyr::pivot_longer(cols = tot_pop_prop:tot_studies_prop, names_to = "type_of_prop", values_to = "val") %>%
dplyr::mutate(type_of_prop = ifelse(type_of_prop == "tot_pop_prop", "Percent Population in PM₂.₅ bucket", "Percent Studies in PM₂.₅ bucket"))
pop_num_studies_in_pollution_buckets_graph <- pop_epi_studies_data %>%
ggplot2::ggplot() +
ggplot2::geom_col(mapping = aes(x = forcats::fct_reorder(region, order_pollution_group), y = val, fill = type_of_prop), position = position_dodge(), width = 0.3) +
ggplot2::scale_y_continuous(breaks = seq(0, 100, 10), limits = c(0, 100)) +
ggplot2::scale_fill_manual(values = c("tot_pop_prop" = "grey", "tot_studies_prop" = "cornflowerblue"), labels = c("Proportion of World Population in Bucket", "Proportion of Studies Completed in Bucket")) +
ggplot2::labs(x = expression("Mean" ~ PM[2.5] ~ "bucket (in µg/m³)"),  y = "Percentage", fill = "",
title = expression("Percentage of Global population in different" ~ PM[2.5] ~ "buckets"),
caption = stringr::str_wrap("*This graph 'only' takes into account the PM2.5 specific studies. For multi-country (pooled) studies, it averages the mean PM2.5 values, across all countries."), width = 10) +
# ggplot2::geom_text(mapping = aes(x = forcats::fct_reorder(region, order_pollution_group), y = val, label = paste0(round(val, 1), "%")), position = ggplot2::position_dodge2(width = 1, preserve = "single"), vjust = -0.5, hjust = -0.2, size = 3) +
ggthemes::theme_fivethirtyeight() +
ggplot2::theme(axis.line.y = element_line(color = "black"),
axis.line.x = element_line(color = "black"),
plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 0.7, unit = "cm")),
plot.title = element_text(size = 14, margin = margin(b = 1, unit = "cm"), hjust = 0.5),
plot.caption.position = "plot",
axis.title.y = element_text(margin = margin(r = 0.5, unit = "cm"), size = 12),
axis.title.x = element_text(margin = margin(t = 0.5, b = 0.5, unit = "cm"), size  = 12),
axis.text = element_text(size = 10),
legend.box.background = element_rect(color = "black"),
legend.position = "bottom") +
viridis::scale_fill_viridis(discrete = TRUE)
return(pop_num_studies_in_pollution_buckets_graph)
}
pop_pol_graph_2_buckets(aqli_color, epi, 0, 15, "pm2021")
pop_pol_graph_2_buckets <- function(aqli_color, epi, thresh_ll, thresh_ul, pm2.5_col_name){
if(thresh_ll > thresh_ul){
stop("Lower Limit should be less than or equal to the Upper limit! Please try again!")
}
# aqli color population in ordered pm2.5 buckets
aqli_color_grp_pm2.5_buckets <- aqli_color %>%
dplyr::filter(!is.na(!!as.symbol(pm2.5_col_name))) %>%
dplyr::mutate(region = ifelse((!!as.symbol(pm2.5_col_name) >= thresh_ll) & (!!as.symbol(pm2.5_col_name) <= thresh_ul), stringr::str_c(thresh_ll, "-", thresh_ul), !!as.symbol(pm2.5_col_name)),
region = ifelse(!!as.symbol(pm2.5_col_name) > thresh_ul, stringr::str_c(">", thresh_ul), region),
region = ifelse(!!as.symbol(pm2.5_col_name) < thresh_ll, stringr::str_c("<", thresh_ll), region)) %>%
dplyr::group_by(region) %>%
dplyr::summarise(tot_pop = sum(population, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(order_pollution_group = ifelse(region == stringr::str_c("<", thresh_ll), 1, 0),
order_pollution_group = ifelse(region == stringr::str_c(thresh_ll, "-", thresh_ul), 2, order_pollution_group),
order_pollution_group = ifelse(region == stringr::str_c(">", thresh_ul), 3, order_pollution_group)) %>%
dplyr::ungroup() %>%
dplyr::mutate(tot_pop_prop = (tot_pop/sum(tot_pop))*100)
# epi total number of studies in ordered pollution buckets (initially filtering out pooled studies, will add back in using a for loop)
epi_num_studies_grp_pm2.5_buckets <- epi %>%
dplyr::filter(!is.na(mean_pm2.5), mean_pm2.5 != "NA", non_pm2.5 == 0) %>%
dplyr::group_by(paper_uid) %>%
dplyr::summarise(mean_pm2.5 = mean(mean_pm2.5, na.rm = TRUE)) %>%
dplyr::mutate(region = ifelse(mean_pm2.5 >= thresh_ll & mean_pm2.5 <= thresh_ul, stringr::str_c(thresh_ll, "-", thresh_ul), mean_pm2.5),
region = ifelse(mean_pm2.5 > thresh_ul, stringr::str_c(">", thresh_ul), region),
region = ifelse(mean_pm2.5 < thresh_ll, stringr::str_c("<", thresh_ll), region)) %>%
dplyr::mutate(order_pollution_group = ifelse(region == stringr::str_c("<", thresh_ll), 1, 0),
order_pollution_group = ifelse(region == stringr::str_c(thresh_ll, "-", thresh_ul), 2, order_pollution_group),
order_pollution_group = ifelse(region == stringr::str_c(">", thresh_ul), 3, order_pollution_group)) %>%
dplyr::group_by(region) %>%
dplyr::summarise(tot_studies = dplyr::n(), order_pollution_group = order_pollution_group[1]) %>%
dplyr::ungroup() %>%
dplyr::mutate(tot_studies_prop = (tot_studies/sum(tot_studies))*100)
#> bar chart version
# creating a master dataset for both population and studies data
pop_epi_studies_data <- aqli_color_grp_pm2.5_buckets %>%
dplyr::left_join(epi_num_studies_grp_pm2.5_buckets, by = c("region", "order_pollution_group")) %>%
dplyr::select(region,  order_pollution_group, tot_pop_prop, tot_studies_prop) %>%
tidyr::pivot_longer(cols = tot_pop_prop:tot_studies_prop, names_to = "type_of_prop", values_to = "val") %>%
dplyr::mutate(type_of_prop = ifelse(type_of_prop == "tot_pop_prop", "Percent Population in PM₂.₅ bucket", "Percent Studies in PM₂.₅ bucket"))
pop_num_studies_in_pollution_buckets_graph <- pop_epi_studies_data %>%
ggplot2::ggplot() +
ggplot2::geom_col(mapping = aes(x = forcats::fct_reorder(region, order_pollution_group), y = val, fill = type_of_prop), position = position_dodge(), width = 0.3) +
ggplot2::scale_y_continuous(breaks = seq(0, 100, 10), limits = c(0, 100)) +
ggplot2::scale_fill_manual(values = c("tot_pop_prop" = "grey", "tot_studies_prop" = "cornflowerblue"), labels = c("Proportion of World Population in Bucket", "Proportion of Studies Completed in Bucket")) +
ggplot2::labs(x = expression("Mean" ~ PM[2.5] ~ "bucket (in µg/m³)"),  y = "Percentage", fill = "",
title = expression("Percentage of Global population in different" ~ PM[2.5] ~ "buckets"),
caption = stringr::str_wrap("*This graph 'only' takes into account the PM2.5 specific studies. For multi-country (pooled) studies, it averages the mean PM2.5 values, across all countries."), width = 10) +
# ggplot2::geom_text(mapping = aes(x = forcats::fct_reorder(region, order_pollution_group), y = val, label = paste0(round(val, 1), "%")), position = ggplot2::position_dodge2(width = 1, preserve = "single"), vjust = -0.5, hjust = -0.2, size = 3) +
ggthemes::theme_tufte() +
ggplot2::theme(axis.line.y = element_line(color = "black"),
axis.line.x = element_line(color = "black"),
plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 0.7, unit = "cm")),
plot.title = element_text(size = 14, margin = margin(b = 1, unit = "cm"), hjust = 0.5),
plot.caption.position = "plot",
axis.title.y = element_text(margin = margin(r = 0.5, unit = "cm"), size = 12),
axis.title.x = element_text(margin = margin(t = 0.5, b = 0.5, unit = "cm"), size  = 12),
axis.text = element_text(size = 10),
legend.box.background = element_rect(color = "black"),
legend.position = "bottom") +
viridis::scale_fill_viridis(discrete = TRUE)
return(pop_num_studies_in_pollution_buckets_graph)
}
pop_pol_graph_2_buckets(aqli_color, epi, 0, 15, "pm2021")
pop_pol_graph_2_buckets <- function(aqli_color, epi, thresh_ll, thresh_ul, pm2.5_col_name){
if(thresh_ll > thresh_ul){
stop("Lower Limit should be less than or equal to the Upper limit! Please try again!")
}
# aqli color population in ordered pm2.5 buckets
aqli_color_grp_pm2.5_buckets <- aqli_color %>%
dplyr::filter(!is.na(!!as.symbol(pm2.5_col_name))) %>%
dplyr::mutate(region = ifelse((!!as.symbol(pm2.5_col_name) >= thresh_ll) & (!!as.symbol(pm2.5_col_name) <= thresh_ul), stringr::str_c(thresh_ll, "-", thresh_ul), !!as.symbol(pm2.5_col_name)),
region = ifelse(!!as.symbol(pm2.5_col_name) > thresh_ul, stringr::str_c(">", thresh_ul), region),
region = ifelse(!!as.symbol(pm2.5_col_name) < thresh_ll, stringr::str_c("<", thresh_ll), region)) %>%
dplyr::group_by(region) %>%
dplyr::summarise(tot_pop = sum(population, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(order_pollution_group = ifelse(region == stringr::str_c("<", thresh_ll), 1, 0),
order_pollution_group = ifelse(region == stringr::str_c(thresh_ll, "-", thresh_ul), 2, order_pollution_group),
order_pollution_group = ifelse(region == stringr::str_c(">", thresh_ul), 3, order_pollution_group)) %>%
dplyr::ungroup() %>%
dplyr::mutate(tot_pop_prop = (tot_pop/sum(tot_pop))*100)
# epi total number of studies in ordered pollution buckets (initially filtering out pooled studies, will add back in using a for loop)
epi_num_studies_grp_pm2.5_buckets <- epi %>%
dplyr::filter(!is.na(mean_pm2.5), mean_pm2.5 != "NA", non_pm2.5 == 0) %>%
dplyr::group_by(paper_uid) %>%
dplyr::summarise(mean_pm2.5 = mean(mean_pm2.5, na.rm = TRUE)) %>%
dplyr::mutate(region = ifelse(mean_pm2.5 >= thresh_ll & mean_pm2.5 <= thresh_ul, stringr::str_c(thresh_ll, "-", thresh_ul), mean_pm2.5),
region = ifelse(mean_pm2.5 > thresh_ul, stringr::str_c(">", thresh_ul), region),
region = ifelse(mean_pm2.5 < thresh_ll, stringr::str_c("<", thresh_ll), region)) %>%
dplyr::mutate(order_pollution_group = ifelse(region == stringr::str_c("<", thresh_ll), 1, 0),
order_pollution_group = ifelse(region == stringr::str_c(thresh_ll, "-", thresh_ul), 2, order_pollution_group),
order_pollution_group = ifelse(region == stringr::str_c(">", thresh_ul), 3, order_pollution_group)) %>%
dplyr::group_by(region) %>%
dplyr::summarise(tot_studies = dplyr::n(), order_pollution_group = order_pollution_group[1]) %>%
dplyr::ungroup() %>%
dplyr::mutate(tot_studies_prop = (tot_studies/sum(tot_studies))*100)
#> bar chart version
# creating a master dataset for both population and studies data
pop_epi_studies_data <- aqli_color_grp_pm2.5_buckets %>%
dplyr::left_join(epi_num_studies_grp_pm2.5_buckets, by = c("region", "order_pollution_group")) %>%
dplyr::select(region,  order_pollution_group, tot_pop_prop, tot_studies_prop) %>%
tidyr::pivot_longer(cols = tot_pop_prop:tot_studies_prop, names_to = "type_of_prop", values_to = "val") %>%
dplyr::mutate(type_of_prop = ifelse(type_of_prop == "tot_pop_prop", "Percent Population in PM₂.₅ bucket", "Percent Studies in PM₂.₅ bucket"))
pop_num_studies_in_pollution_buckets_graph <- pop_epi_studies_data %>%
ggplot2::ggplot() +
ggplot2::geom_col(mapping = aes(x = forcats::fct_reorder(region, order_pollution_group), y = val, fill = type_of_prop), position = position_dodge(), width = 0.3) +
ggplot2::scale_y_continuous(breaks = seq(0, 100, 10)) +
ggplot2::scale_fill_manual(values = c("tot_pop_prop" = "grey", "tot_studies_prop" = "cornflowerblue"), labels = c("Proportion of World Population in Bucket", "Proportion of Studies Completed in Bucket")) +
ggplot2::labs(x = expression("Mean" ~ PM[2.5] ~ "bucket (in µg/m³)"),  y = "Percentage", fill = "",
title = expression("Percentage of Global population in different" ~ PM[2.5] ~ "buckets"),
caption = stringr::str_wrap("*This graph 'only' takes into account the PM2.5 specific studies. For multi-country (pooled) studies, it averages the mean PM2.5 values, across all countries."), width = 10) +
# ggplot2::geom_text(mapping = aes(x = forcats::fct_reorder(region, order_pollution_group), y = val, label = paste0(round(val, 1), "%")), position = ggplot2::position_dodge2(width = 1, preserve = "single"), vjust = -0.5, hjust = -0.2, size = 3) +
ggthemes::theme_tufte() +
ggplot2::theme(axis.line.y = element_line(color = "black"),
axis.line.x = element_line(color = "black"),
plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 0.7, unit = "cm")),
plot.title = element_text(size = 14, margin = margin(b = 1, unit = "cm"), hjust = 0.5),
plot.caption.position = "plot",
axis.title.y = element_text(margin = margin(r = 0.5, unit = "cm"), size = 12),
axis.title.x = element_text(margin = margin(t = 0.5, b = 0.5, unit = "cm"), size  = 12),
axis.text = element_text(size = 10),
legend.box.background = element_rect(color = "black"),
legend.position = "bottom") +
viridis::scale_fill_viridis(discrete = TRUE)
return(pop_num_studies_in_pollution_buckets_graph)
}
pop_pol_graph_2_buckets(aqli_color, epi, 0, 15, "pm2021")
# load app.R helper file
source("./appPublic/app_helper.R")
pop_pol_graph_2_buckets(aqli_color, epi, 0, 15, "pm2021")
pop_num_studies_in_pollution_buckets_graph <- pop_epi_studies_data %>%
ggplot2::ggplot() +
ggplot2::geom_col(mapping = aes(x = forcats::fct_reorder(region, order_pollution_group), y = val, fill = type_of_prop), position = position_dodge(), width = 0.3) +
ggplot2::scale_y_continuous(breaks = seq(0, 100, 10)) +
ggplot2::scale_fill_manual(values = c("tot_pop_prop" = "grey", "tot_studies_prop" = "cornflowerblue"), labels = c("Proportion of World Population in Bucket", "Proportion of Studies Completed in Bucket")) +
ggplot2::labs(x = expression("Mean" ~ PM[2.5] ~ "bucket (in µg/m³)"),  y = "Percentage", fill = "",
title = expression("Percentage of Global population in different" ~ PM[2.5] ~ "buckets"),
caption = stringr::str_wrap("*This graph 'only' takes into account the PM2.5 specific studies. For multi-country (pooled) studies, it averages the mean PM2.5 values, across all countries."), width = 10) +
# ggplot2::geom_text(mapping = aes(x = forcats::fct_reorder(region, order_pollution_group), y = val, label = paste0(round(val, 1), "%")), position = ggplot2::position_dodge2(width = 1, preserve = "single"), vjust = -0.5, hjust = -0.2, size = 3) +
ggthemes::theme_tufte() +
ggplot2::theme(axis.line.y = element_line(color = "black"),
axis.line.x = element_line(color = "black"),
plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 0.7, unit = "cm")),
plot.title = element_text(size = 16, margin = margin(b = 1, unit = "cm"), hjust = 0.5),
plot.caption.position = "plot",
axis.title.y = element_text(margin = margin(r = 0.5, unit = "cm"), size = 14),
axis.title.x = element_text(margin = margin(t = 0.5, b = 0.5, unit = "cm"), size  = 14),
axis.text = element_text(size = 12),
legend.box.background = element_rect(color = "black"),
legend.position = "bottom") +
viridis::scale_fill_viridis(discrete = TRUE)
pop_pol_graph_2_buckets <- function(aqli_color, epi, thresh_ll, thresh_ul, pm2.5_col_name){
if(thresh_ll > thresh_ul){
stop("Lower Limit should be less than or equal to the Upper limit! Please try again!")
}
# aqli color population in ordered pm2.5 buckets
aqli_color_grp_pm2.5_buckets <- aqli_color %>%
dplyr::filter(!is.na(!!as.symbol(pm2.5_col_name))) %>%
dplyr::mutate(region = ifelse((!!as.symbol(pm2.5_col_name) >= thresh_ll) & (!!as.symbol(pm2.5_col_name) <= thresh_ul), stringr::str_c(thresh_ll, "-", thresh_ul), !!as.symbol(pm2.5_col_name)),
region = ifelse(!!as.symbol(pm2.5_col_name) > thresh_ul, stringr::str_c(">", thresh_ul), region),
region = ifelse(!!as.symbol(pm2.5_col_name) < thresh_ll, stringr::str_c("<", thresh_ll), region)) %>%
dplyr::group_by(region) %>%
dplyr::summarise(tot_pop = sum(population, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(order_pollution_group = ifelse(region == stringr::str_c("<", thresh_ll), 1, 0),
order_pollution_group = ifelse(region == stringr::str_c(thresh_ll, "-", thresh_ul), 2, order_pollution_group),
order_pollution_group = ifelse(region == stringr::str_c(">", thresh_ul), 3, order_pollution_group)) %>%
dplyr::ungroup() %>%
dplyr::mutate(tot_pop_prop = (tot_pop/sum(tot_pop))*100)
# epi total number of studies in ordered pollution buckets (initially filtering out pooled studies, will add back in using a for loop)
epi_num_studies_grp_pm2.5_buckets <- epi %>%
dplyr::filter(!is.na(mean_pm2.5), mean_pm2.5 != "NA", non_pm2.5 == 0) %>%
dplyr::group_by(paper_uid) %>%
dplyr::summarise(mean_pm2.5 = mean(mean_pm2.5, na.rm = TRUE)) %>%
dplyr::mutate(region = ifelse(mean_pm2.5 >= thresh_ll & mean_pm2.5 <= thresh_ul, stringr::str_c(thresh_ll, "-", thresh_ul), mean_pm2.5),
region = ifelse(mean_pm2.5 > thresh_ul, stringr::str_c(">", thresh_ul), region),
region = ifelse(mean_pm2.5 < thresh_ll, stringr::str_c("<", thresh_ll), region)) %>%
dplyr::mutate(order_pollution_group = ifelse(region == stringr::str_c("<", thresh_ll), 1, 0),
order_pollution_group = ifelse(region == stringr::str_c(thresh_ll, "-", thresh_ul), 2, order_pollution_group),
order_pollution_group = ifelse(region == stringr::str_c(">", thresh_ul), 3, order_pollution_group)) %>%
dplyr::group_by(region) %>%
dplyr::summarise(tot_studies = dplyr::n(), order_pollution_group = order_pollution_group[1]) %>%
dplyr::ungroup() %>%
dplyr::mutate(tot_studies_prop = (tot_studies/sum(tot_studies))*100)
#> bar chart version
# creating a master dataset for both population and studies data
pop_epi_studies_data <- aqli_color_grp_pm2.5_buckets %>%
dplyr::left_join(epi_num_studies_grp_pm2.5_buckets, by = c("region", "order_pollution_group")) %>%
dplyr::select(region,  order_pollution_group, tot_pop_prop, tot_studies_prop) %>%
tidyr::pivot_longer(cols = tot_pop_prop:tot_studies_prop, names_to = "type_of_prop", values_to = "val") %>%
dplyr::mutate(type_of_prop = ifelse(type_of_prop == "tot_pop_prop", "Percent Population in PM₂.₅ bucket", "Percent Studies in PM₂.₅ bucket"))
pop_num_studies_in_pollution_buckets_graph <- pop_epi_studies_data %>%
ggplot2::ggplot() +
ggplot2::geom_col(mapping = aes(x = forcats::fct_reorder(region, order_pollution_group), y = val, fill = type_of_prop), position = position_dodge(), width = 0.3) +
ggplot2::scale_y_continuous(breaks = seq(0, 100, 10)) +
ggplot2::scale_fill_manual(values = c("tot_pop_prop" = "grey", "tot_studies_prop" = "cornflowerblue"), labels = c("Proportion of World Population in Bucket", "Proportion of Studies Completed in Bucket")) +
ggplot2::labs(x = expression("Mean" ~ PM[2.5] ~ "bucket (in µg/m³)"),  y = "Percentage", fill = "",
title = expression("Percentage of Global population in different" ~ PM[2.5] ~ "buckets"),
caption = stringr::str_wrap("*This graph 'only' takes into account the PM2.5 specific studies. For multi-country (pooled) studies, it averages the mean PM2.5 values, across all countries."), width = 10) +
# ggplot2::geom_text(mapping = aes(x = forcats::fct_reorder(region, order_pollution_group), y = val, label = paste0(round(val, 1), "%")), position = ggplot2::position_dodge2(width = 1, preserve = "single"), vjust = -0.5, hjust = -0.2, size = 3) +
ggthemes::theme_tufte() +
ggplot2::theme(axis.line.y = element_line(color = "black"),
axis.line.x = element_line(color = "black"),
plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 0.7, unit = "cm")),
plot.title = element_text(size = 16, margin = margin(b = 1, unit = "cm"), hjust = 0.5),
plot.caption.position = "plot",
axis.title.y = element_text(margin = margin(r = 0.5, unit = "cm"), size = 14),
axis.title.x = element_text(margin = margin(t = 0.5, b = 0.5, unit = "cm"), size  = 14),
axis.text = element_text(size = 12),
legend.box.background = element_rect(color = "black"),
legend.position = "bottom") +
viridis::scale_fill_viridis(discrete = TRUE)
return(pop_num_studies_in_pollution_buckets_graph)
}
pop_pol_graph_2_buckets(aqli_color, epi, 0, 15, "pm2021")
pop_pol_graph_2_buckets <- function(aqli_color, epi, thresh_ll, thresh_ul, pm2.5_col_name){
if(thresh_ll > thresh_ul){
stop("Lower Limit should be less than or equal to the Upper limit! Please try again!")
}
# aqli color population in ordered pm2.5 buckets
aqli_color_grp_pm2.5_buckets <- aqli_color %>%
dplyr::filter(!is.na(!!as.symbol(pm2.5_col_name))) %>%
dplyr::mutate(region = ifelse((!!as.symbol(pm2.5_col_name) >= thresh_ll) & (!!as.symbol(pm2.5_col_name) <= thresh_ul), stringr::str_c(thresh_ll, "-", thresh_ul), !!as.symbol(pm2.5_col_name)),
region = ifelse(!!as.symbol(pm2.5_col_name) > thresh_ul, stringr::str_c(">", thresh_ul), region),
region = ifelse(!!as.symbol(pm2.5_col_name) < thresh_ll, stringr::str_c("<", thresh_ll), region)) %>%
dplyr::group_by(region) %>%
dplyr::summarise(tot_pop = sum(population, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(order_pollution_group = ifelse(region == stringr::str_c("<", thresh_ll), 1, 0),
order_pollution_group = ifelse(region == stringr::str_c(thresh_ll, "-", thresh_ul), 2, order_pollution_group),
order_pollution_group = ifelse(region == stringr::str_c(">", thresh_ul), 3, order_pollution_group)) %>%
dplyr::ungroup() %>%
dplyr::mutate(tot_pop_prop = (tot_pop/sum(tot_pop))*100)
# epi total number of studies in ordered pollution buckets (initially filtering out pooled studies, will add back in using a for loop)
epi_num_studies_grp_pm2.5_buckets <- epi %>%
dplyr::filter(!is.na(mean_pm2.5), mean_pm2.5 != "NA", non_pm2.5 == 0) %>%
dplyr::group_by(paper_uid) %>%
dplyr::summarise(mean_pm2.5 = mean(mean_pm2.5, na.rm = TRUE)) %>%
dplyr::mutate(region = ifelse(mean_pm2.5 >= thresh_ll & mean_pm2.5 <= thresh_ul, stringr::str_c(thresh_ll, "-", thresh_ul), mean_pm2.5),
region = ifelse(mean_pm2.5 > thresh_ul, stringr::str_c(">", thresh_ul), region),
region = ifelse(mean_pm2.5 < thresh_ll, stringr::str_c("<", thresh_ll), region)) %>%
dplyr::mutate(order_pollution_group = ifelse(region == stringr::str_c("<", thresh_ll), 1, 0),
order_pollution_group = ifelse(region == stringr::str_c(thresh_ll, "-", thresh_ul), 2, order_pollution_group),
order_pollution_group = ifelse(region == stringr::str_c(">", thresh_ul), 3, order_pollution_group)) %>%
dplyr::group_by(region) %>%
dplyr::summarise(tot_studies = dplyr::n(), order_pollution_group = order_pollution_group[1]) %>%
dplyr::ungroup() %>%
dplyr::mutate(tot_studies_prop = (tot_studies/sum(tot_studies))*100)
#> bar chart version
# creating a master dataset for both population and studies data
pop_epi_studies_data <- aqli_color_grp_pm2.5_buckets %>%
dplyr::left_join(epi_num_studies_grp_pm2.5_buckets, by = c("region", "order_pollution_group")) %>%
dplyr::select(region,  order_pollution_group, tot_pop_prop, tot_studies_prop) %>%
tidyr::pivot_longer(cols = tot_pop_prop:tot_studies_prop, names_to = "type_of_prop", values_to = "val") %>%
dplyr::mutate(type_of_prop = ifelse(type_of_prop == "tot_pop_prop", "Percent Population in PM₂.₅ bucket", "Percent Studies in PM₂.₅ bucket"))
pop_num_studies_in_pollution_buckets_graph <- pop_epi_studies_data %>%
ggplot2::ggplot() +
ggplot2::geom_col(mapping = aes(x = forcats::fct_reorder(region, order_pollution_group), y = val, fill = type_of_prop), position = position_dodge(), width = 0.3) +
ggplot2::scale_y_continuous(breaks = seq(0, 100, 10)) +
ggplot2::scale_fill_manual(values = c("tot_pop_prop" = "grey", "tot_studies_prop" = "cornflowerblue"), labels = c("Proportion of World Population in Bucket", "Proportion of Studies Completed in Bucket")) +
ggplot2::labs(x = expression("Mean" ~ PM[2.5] ~ "bucket (in µg/m³)"),  y = "Percentage", fill = "",
title = expression("Percentage of Global population in different" ~ PM[2.5] ~ "buckets"),
caption = stringr::str_wrap("*This graph 'only' takes into account the PM2.5 specific studies. For multi-country (pooled) studies, it averages the mean PM2.5 values, across all countries."), width = 10) +
# ggplot2::geom_text(mapping = aes(x = forcats::fct_reorder(region, order_pollution_group), y = val, label = paste0(round(val, 1), "%")), position = ggplot2::position_dodge2(width = 1, preserve = "single"), vjust = -0.5, hjust = -0.2, size = 3) +
ggthemes::theme_tufte() +
ggplot2::theme(axis.line.y = element_line(color = "black"),
axis.line.x = element_line(color = "black"),
plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 0.7, unit = "cm")),
plot.title = element_text(size = 16, margin = margin(b = 1, unit = "cm"), hjust = 0.5),
plot.caption.position = "plot",
axis.title.y = element_text(margin = margin(r = 0.5, unit = "cm"), size = 14),
axis.title.x = element_text(margin = margin(t = 0.5, b = 0.5, unit = "cm"), size  = 14),
axis.text = element_text(size = 12),
legend.box.background = element_rect(color = "black"),
legend.position = "bottom",
legend.text = element_text(size = 10)) +
viridis::scale_fill_viridis(discrete = TRUE)
return(pop_num_studies_in_pollution_buckets_graph)
}
pop_pol_graph_2_buckets(aqli_color, epi, 0, 15, "pm2021")
pop_pol_graph_2_buckets <- function(aqli_color, epi, thresh_ll, thresh_ul, pm2.5_col_name){
if(thresh_ll > thresh_ul){
stop("Lower Limit should be less than or equal to the Upper limit! Please try again!")
}
# aqli color population in ordered pm2.5 buckets
aqli_color_grp_pm2.5_buckets <- aqli_color %>%
dplyr::filter(!is.na(!!as.symbol(pm2.5_col_name))) %>%
dplyr::mutate(region = ifelse((!!as.symbol(pm2.5_col_name) >= thresh_ll) & (!!as.symbol(pm2.5_col_name) <= thresh_ul), stringr::str_c(thresh_ll, "-", thresh_ul), !!as.symbol(pm2.5_col_name)),
region = ifelse(!!as.symbol(pm2.5_col_name) > thresh_ul, stringr::str_c(">", thresh_ul), region),
region = ifelse(!!as.symbol(pm2.5_col_name) < thresh_ll, stringr::str_c("<", thresh_ll), region)) %>%
dplyr::group_by(region) %>%
dplyr::summarise(tot_pop = sum(population, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(order_pollution_group = ifelse(region == stringr::str_c("<", thresh_ll), 1, 0),
order_pollution_group = ifelse(region == stringr::str_c(thresh_ll, "-", thresh_ul), 2, order_pollution_group),
order_pollution_group = ifelse(region == stringr::str_c(">", thresh_ul), 3, order_pollution_group)) %>%
dplyr::ungroup() %>%
dplyr::mutate(tot_pop_prop = (tot_pop/sum(tot_pop))*100)
# epi total number of studies in ordered pollution buckets (initially filtering out pooled studies, will add back in using a for loop)
epi_num_studies_grp_pm2.5_buckets <- epi %>%
dplyr::filter(!is.na(mean_pm2.5), mean_pm2.5 != "NA", non_pm2.5 == 0) %>%
dplyr::group_by(paper_uid) %>%
dplyr::summarise(mean_pm2.5 = mean(mean_pm2.5, na.rm = TRUE)) %>%
dplyr::mutate(region = ifelse(mean_pm2.5 >= thresh_ll & mean_pm2.5 <= thresh_ul, stringr::str_c(thresh_ll, "-", thresh_ul), mean_pm2.5),
region = ifelse(mean_pm2.5 > thresh_ul, stringr::str_c(">", thresh_ul), region),
region = ifelse(mean_pm2.5 < thresh_ll, stringr::str_c("<", thresh_ll), region)) %>%
dplyr::mutate(order_pollution_group = ifelse(region == stringr::str_c("<", thresh_ll), 1, 0),
order_pollution_group = ifelse(region == stringr::str_c(thresh_ll, "-", thresh_ul), 2, order_pollution_group),
order_pollution_group = ifelse(region == stringr::str_c(">", thresh_ul), 3, order_pollution_group)) %>%
dplyr::group_by(region) %>%
dplyr::summarise(tot_studies = dplyr::n(), order_pollution_group = order_pollution_group[1]) %>%
dplyr::ungroup() %>%
dplyr::mutate(tot_studies_prop = (tot_studies/sum(tot_studies))*100)
#> bar chart version
# creating a master dataset for both population and studies data
pop_epi_studies_data <- aqli_color_grp_pm2.5_buckets %>%
dplyr::left_join(epi_num_studies_grp_pm2.5_buckets, by = c("region", "order_pollution_group")) %>%
dplyr::select(region,  order_pollution_group, tot_pop_prop, tot_studies_prop) %>%
tidyr::pivot_longer(cols = tot_pop_prop:tot_studies_prop, names_to = "type_of_prop", values_to = "val") %>%
dplyr::mutate(type_of_prop = ifelse(type_of_prop == "tot_pop_prop", "Percent Population in PM₂.₅ bucket", "Percent Studies in PM₂.₅ bucket"))
pop_num_studies_in_pollution_buckets_graph <- pop_epi_studies_data %>%
ggplot2::ggplot() +
ggplot2::geom_col(mapping = aes(x = forcats::fct_reorder(region, order_pollution_group), y = val, fill = type_of_prop), position = position_dodge(), width = 0.3) +
ggplot2::scale_y_continuous(breaks = seq(0, 100, 10)) +
ggplot2::scale_fill_manual(values = c("tot_pop_prop" = "grey", "tot_studies_prop" = "cornflowerblue"), labels = c("Proportion of World Population in Bucket", "Proportion of Studies Completed in Bucket")) +
ggplot2::labs(x = expression("Mean" ~ PM[2.5] ~ "bucket (in µg/m³)"),  y = "Percentage", fill = "",
title = expression("Percentage of Global population in different" ~ PM[2.5] ~ "buckets"),
caption = stringr::str_wrap("*This graph 'only' takes into account the PM2.5 specific studies. For multi-country (pooled) studies, it averages the mean PM2.5 values, across all countries."), width = 10) +
# ggplot2::geom_text(mapping = aes(x = forcats::fct_reorder(region, order_pollution_group), y = val, label = paste0(round(val, 1), "%")), position = ggplot2::position_dodge2(width = 1, preserve = "single"), vjust = -0.5, hjust = -0.2, size = 3) +
ggthemes::theme_tufte() +
ggplot2::theme(axis.line.y = element_line(color = "black"),
axis.line.x = element_line(color = "black"),
plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 0.7, unit = "cm")),
plot.title = element_text(size = 16, margin = margin(b = 1, unit = "cm"), hjust = 0.5),
plot.caption.position = "plot",
axis.title.y = element_text(margin = margin(r = 0.5, unit = "cm"), size = 14),
axis.title.x = element_text(margin = margin(t = 0.5, b = 0.5, unit = "cm"), size  = 14),
axis.text = element_text(size = 12),
legend.box.background = element_rect(color = "black"),
legend.position = "bottom",
legend.text = element_text(size = 12)) +
viridis::scale_fill_viridis(discrete = TRUE)
return(pop_num_studies_in_pollution_buckets_graph)
}
pop_pol_graph_2_buckets(aqli_color, epi, 0, 15, "pm2021")
